#!/bin/bash

BUILD_DIR="$1"
CACHE_DIR="$2"

VENDOR_DIR="$BUILD_DIR/vendor"
PROFILE_D_DIR="$BUILD_DIR/.profile.d"

indent() {
  sed -u 's/^/       /'
}

fail() {
  echo "$1" | indent >&2
  exit 1
}

echo "-----> Found a .vendor_urls file"

# Bail early but noisily
if [ ! -s $1/.vendor_urls ]; then
  echo ".vendor_urls empty. Skipping." | indent
  exit 0
fi

mkdir -p "$CACHE_DIR"

# create .profile.d directory for setting PATH
mkdir -p "$PROFILE_D_DIR"
rm -fr "$PROFILE_D_DIR/vendorbinaries.sh"

# create vendor directory in case it does not exist
mkdir -p "$VENDOR_DIR"

while read url; do
  if [ -n "$url" ]; then # incase ensure_newline_at_eof_on_save is enabled
    echo "Vendoring $url..." | indent

    filename=`basename "$url"`
    rm -fr "$CACHE_DIR/$filename"
    curl -L -s -o "$CACHE_DIR/$filename" "$url?$SOURCE_VERSION" || fail "Downloading '$url?$SOURCE_VERSION' to '$CACHE_DIR/$filename"' failed.'

    tar_options="x"
    mime_type=`file -b --mime-type "$CACHE_DIR/$filename"`
    if [ "$mime_type" == "application/x-bzip2" -o "$mime_type" == "application/bzip2" ]; then
        tar_options="${tar_options}j"
        extension=".tar.bz2"
    elif [ "$mime_type" == "application/x-xz" -o "$mime_type" == "application/xz" ]; then
        tar_options="${tar_options}J"
        extension=".tar.xz"
    elif [ "$mime_type" == "application/x-gzip" -o "$mime_type" == "application/gzip" ]; then
        tar_options="${tar_options}z"
        extension=".tar.gz"
    else
        fail "Unknown archive type '$mime_type' for '$url'."
    fi

    dirname=`basename "$url" "$extension"`
    rm -fr "$CACHE_DIR/$dirname" "$VENDOR_DIR/$dirname"

    tar "${tar_options}f" "$CACHE_DIR/$filename" -C "$CACHE_DIR" || fail "Extracting '$CACHE_DIR/$filename' failed (tar options '${tar_options}')."
    mv "$CACHE_DIR/$dirname" "$VENDOR_DIR/$dirname" || fail 'Moving '$CACHE_DIR/$dirname' to '$VENDOR_DIR/$dirname' failed.'

    if [ -d "$VENDOR_DIR/$dirname" ]; then
        if [ -d "$VENDOR_DIR/$dirname/bin" ]; then
            echo "Found bin in $dirname. Prepending it before PATH." | indent
            echo "export PATH=\"\$HOME/vendor/$dirname/bin:\$PATH\"" >> "$PROFILE_D_DIR/vendorbinaries.sh"
        fi

        if [ -d "$VENDOR_DIR/$dirname/lib" ]; then
            echo "Found lib in $dirname. Prepending it before LD_LIBRARY_PATH." | indent
            echo "export LD_LIBRARY_PATH=\"\$HOME/vendor/$dirname/lib:\$LD_LIBRARY_PATH\"" >> "$PROFILE_D_DIR/vendorbinaries.sh"
        fi
    fi
  fi
done < "$BUILD_DIR/.vendor_urls"
